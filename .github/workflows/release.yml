name: "release"

on:
    push:
        branches:
        - '*'

jobs:
  release:
    name: "Build, compile and upload"
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: pygna
    strategy:
      matrix:
        python: [3.7]
        numpy: [1.15]
    steps:
      - uses: actions/checkout@v1
      - name: "Setup Conda"
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python }}
          conda-channels: anaconda, conda-forge, bioconda
      - name: "Install Conda development packages"
        run: |
            conda install conda-build
            conda install -c anaconda anaconda-client
      - name: "Build and upload package"
        run: |
            mkdir conda-build
            conda build . --no-build-id --numpy ${{ matrix.numpy }} --output-folder ./conda-build
            conda convert -p all ./conda-build/**/pygna*.bz2 --output-dir ./conda-build
            anaconda -t ${{ secrets.ANACONDA_API_TOKEN }} upload --force -u stracquadaniolab --no-progress ./conda-build/**/pygna*.bz2

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install required packages
        run: pip install wheel twine
      - name: Build package
        run: python setup.py sdist bdist_wheel
      - name: Publish package
        if: github.ref == 'refs/heads/master'
        run: twine upload -u ${{ secrets.PYPI_USERNAME }} -p ${{secrets.PYPI_PASSWORD}} dist/*

      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker build . --file docker/dockerfile --tag pygna:latest
      - name: Log into registry
        run: echo "${{ secrets.GH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
